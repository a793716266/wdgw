<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="InformationMapper">
	
	<!--表名 -->
	<sql id="tableName">
		INFORMATION
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		TITLE,	
		REMARK,	
		INFO,	
		CATEGORY_ID,	
		CATEGORY_NAME,	
		SOURCE,	
		STATE,	
		SORT,	
		IS_TOP,	
		IS_DEL,	
		CREATE_BY,	
		CREATE_TIME,	
		UPDATE_BY,	
		UPDATE_TIME,	
		INFORMATION_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{TITLE},	
		#{REMARK},	
		#{INFO},	
		#{CATEGORY_ID},	
		#{CATEGORY_NAME},	
		#{SOURCE},	
		#{STATE},	
		#{SORT},	
		#{IS_TOP},	
		#{IS_DEL},	
		#{CREATE_BY},	
		#{CREATE_TIME},
		#{UPDATE_BY},	
		#{UPDATE_TIME},	
		#{INFORMATION_ID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			INFORMATION_ID = #{INFORMATION_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			TITLE = #{TITLE},
			REMARK = #{REMARK},
			INFO = #{INFO},
			CATEGORY_ID = #{CATEGORY_ID},
			CATEGORY_NAME = #{CATEGORY_NAME},
			SOURCE = #{SOURCE},
			STATE = #{STATE},
			SORT = #{SORT},
			IS_TOP = #{IS_TOP},
			IS_DEL = #{IS_DEL},
			UPDATE_BY = #{UPDATE_BY},
			UPDATE_TIME = #{UPDATE_TIME},
		INFORMATION_ID = INFORMATION_ID
		where 
		INFORMATION_ID = #{INFORMATION_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			INFORMATION_ID = #{INFORMATION_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where STATE = 0
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
		<if test="pd.CATEGORY_ID!= null and pd.CATEGORY_ID != ''">
			and CATEGORY_ID = #{pd.CATEGORY_ID}
		</if>
		ORDER BY CREATE_TIME DESC
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		ORDER BY CREATE_TIME DESC
		where STATE = 0
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			INFORMATION_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- 列表(全局搜索) -->
	<select id="searchlistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where is_del=0 
			and STATE = 0 
		<if test="pd.keywords!=null">
		 	and 
		 	(title like CONCAT('%',#{pd.keywords},'%')  
			or 
			remark like CONCAT('%',#{pd.keywords},'%')
			or 
			info like CONCAT('%',#{pd.keywords},'%')
			or 
			source like CONCAT('%',#{pd.keywords},'%'))
		</if>
		ORDER BY CREATE_TIME DESC
	</select>
	
	<!-- 通过ID获取数据 -->
	<select id="findByDate" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			STATE = 0 
			and 
			CREATE_TIME between #{beginDate} and #{endDate}
			ORDER BY CREATE_TIME DESC
	</select>
</mapper>